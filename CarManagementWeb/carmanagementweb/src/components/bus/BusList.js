import React, { useEffect, useState } from "react";
import Apis, { endpoints } from "../../configs/Apis.js";

export default function BusList() {
    const [buses, setBuses] = useState([]);
    const [loading, setLoading] = useState(false);

    const loadBuses = async () => {
        setLoading(true);
        try {
            const res = await Apis.get(endpoints.buses);
            console.log("üìå API tr·∫£ v·ªÅ raw:", res);

            if (Array.isArray(res.data)) {
                setBuses(res.data);
            } else {
                setBuses([]);
            }
        } catch (err) {
            console.error("‚ùå L·ªói khi t·∫£i danh s√°ch xe:", err);
            setBuses([]);
        } finally {
            setLoading(false);
        }
    };

    useEffect(() => {
        loadBuses();
    }, []);

    if (loading) return <p style={styles.loadingMessage}>ƒêang t·∫£i danh s√°ch xe...</p>;

    return (
        <div style={styles.container}>
            <h2 style={styles.heading}>Danh s√°ch Xe Kh√°ch</h2>

            {!Array.isArray(buses) || buses.length === 0 ? (
                <p style={styles.noDataMessage}>üö® Kh√¥ng c√≥ d·ªØ li·ªáu xe kh√°ch n√†o ƒë·ªÉ hi·ªÉn th·ªã.</p>
            ) : (
                <div style={styles.cardGrid}>
                    {buses.map((bus) => (
                        <div key={bus.id} style={styles.card}>
                            <div style={styles.cardHeader}>
                                <h3 style={styles.cardTitle}>Xe {bus.model}</h3>
                                <span style={bus.status === 'Ho·∫°t ƒë·ªông' ? styles.statusActive : styles.statusInactive}>
                                    {bus.status}
                                </span>
                            </div>
                            <div style={styles.cardBody}>
                                <p style={styles.cardDetail}><strong style={styles.strongText}>Bi·ªÉn s·ªë:</strong> {bus.licensePlate}</p>
                                <p style={styles.cardDetail}><strong style={styles.strongText}>S·ª©c ch·ª©a:</strong> {bus.capacity} ch·ªó</p>
                                <p style={styles.cardDetail}><strong style={styles.strongText}>NƒÉm s·∫£n xu·∫•t:</strong> {bus.yearManufacture}</p>
                                <p style={styles.cardDetail}><strong style={styles.strongText}>ID Xe:</strong> {bus.id}</p>
                            </div>
                            <div style={styles.cardFooter}>
                                <button style={styles.viewDetailsButton}>
                                    Xem chi ti·∫øt
                                </button>
                            </div>
                        </div>
                    ))}
                </div>
            )}
        </div>
    );
}

const styles = {
    container: {
        // S·ª≠ d·ª•ng font 'Quicksand' - m·ªôt font sans-serif hi·ªán ƒë·∫°i, m·ªÅm m·∫°i v√† d·ªÖ ƒë·ªçc.
        // C·∫ßn ƒë·∫£m b·∫£o font n√†y ƒë∆∞·ª£c import v√†o d·ª± √°n c·ªßa b·∫°n (v√≠ d·ª•: qua Google Fonts)
        fontFamily: "'Quicksand', sans-serif",
        padding: '30px',
        maxWidth: '1200px',
        margin: '20px auto',
        backgroundColor: '#f5f7fa',
        borderRadius: '12px',
        boxShadow: '0 8px 25px rgba(0,0,0,0.08)',
    },
    loadingMessage: {
        textAlign: 'center',
        fontSize: '1.4em',
        color: '#6c757d',
        padding: '40px 20px',
        backgroundColor: '#e9ecef',
        borderRadius: '8px',
        boxShadow: '0 2px 8px rgba(0,0,0,0.05)',
        fontWeight: '500', // Gi·ªØ ƒë·ªô ƒë·∫≠m v·ª´a ph·∫£i
    },
    heading: {
        textAlign: 'center',
        color: '#e75702',
        marginBottom: '40px',
        fontSize: '3.2em', // To h∆°n m·ªôt ch√∫t ƒë·ªÉ t·∫°o ƒëi·ªÉm nh·∫•n m·∫°nh m·∫Ω
        fontWeight: '700', // R·∫•t ƒë·∫≠m
        textTransform: 'uppercase',
        letterSpacing: '0.08em', // TƒÉng kho·∫£ng c√°ch ch·ªØ nh·∫π ƒë·ªÉ tr√¥ng tho√°ng h∆°n
        textShadow: '1px 1px 4px rgba(0,0,0,0.1)', // ƒê·ªï b√≥ng ch·ªØ r√µ h∆°n
    },
    noDataMessage: {
        textAlign: 'center',
        fontSize: '1.6em',
        color: '#dc3545',
        padding: '30px',
        backgroundColor: '#fff0f3',
        border: '1px solid #ffcccb',
        borderRadius: '8px',
        boxShadow: '0 2px 10px rgba(0,0,0,0.05)',
        fontWeight: '600', // ƒê·∫≠m v·ª´a
    },
    cardGrid: {
        display: 'grid',
        gridTemplateColumns: 'repeat(auto-fit, minmax(350px, 1fr))',
        gap: '25px',
        justifyContent: 'center',
    },
    card: {
        backgroundColor: '#ffffff',
        border: '1px solid #e0e0e0',
        borderRadius: '10px',
        boxShadow: '0 4px 15px rgba(0,0,0,0.08)',
        padding: '25px',
        transition: 'transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out',
        display: 'flex',
        flexDirection: 'column',
        justifyContent: 'space-between',
        cursor: 'pointer',
        '&:hover': {
            transform: 'translateY(-5px)',
            boxShadow: '0 8px 25px rgba(0,0,0,0.15)',
        }
    },
    cardHeader: {
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
        paddingBottom: '15px',
        borderBottom: '1px solid #f0f0f0',
        marginBottom: '15px',
    },
    cardTitle: {
        fontSize: '2em', // K√≠ch th∆∞·ªõc ti√™u ƒë·ªÅ card
        color: '#e75702',
        fontWeight: '700', // ƒê·∫≠m h∆°n
        margin: 0,
        letterSpacing: '0.02em', // TƒÉng kho·∫£ng c√°ch ch·ªØ nh·∫π cho ti√™u ƒë·ªÅ card
    },
    cardBody: {
        flexGrow: 1,
    },
    cardDetail: {
        fontSize: '1.05em', // K√≠ch th∆∞·ªõc ch·ªØ chi ti·∫øt
        color: '#555',
        marginBottom: '8px',
        lineHeight: '1.6', // TƒÉng kho·∫£ng c√°ch d√≤ng ƒë·ªÉ d·ªÖ ƒë·ªçc h∆°n
    },
    strongText: {
        color: '#333',
        fontWeight: '700', // ƒê·∫≠m h∆°n cho c√°c nh√£n
    },
    statusActive: {
        color: '#ffffff',
        fontWeight: '600', // ƒê·∫≠m v·ª´a ph·∫£i
        backgroundColor: '#28a745',
        padding: '5px 12px',
        borderRadius: '20px',
        fontSize: '0.85em', // Nh·ªè h∆°n m·ªôt ch√∫t cho tr·∫°ng th√°i
        textTransform: 'uppercase',
        letterSpacing: '0.03em', // Kho·∫£ng c√°ch ch·ªØ cho tr·∫°ng th√°i
    },
    statusInactive: {
        color: '#ffffff',
        fontWeight: '600',
        backgroundColor: '#6c757d',
        padding: '5px 12px',
        borderRadius: '20px',
        fontSize: '0.85em',
        textTransform: 'uppercase',
        letterSpacing: '0.03em',
    },
    cardFooter: {
        marginTop: '20px',
        paddingTop: '15px',
        borderTop: '1px solid #f0f0f0',
        textAlign: 'center',
    },
    viewDetailsButton: {
        backgroundColor: '#e75702',
        color: '#ffffff',
        border: 'none',
        borderRadius: '5px',
        padding: '12px 25px',
        fontSize: '1.05em', // K√≠ch th∆∞·ªõc ch·ªØ n√∫t
        fontWeight: '600', // ƒê·∫≠m v·ª´a
        cursor: 'pointer',
        transition: 'background-color 0.3s ease, transform 0.2s ease',
        '&:hover': {
            backgroundColor: '#d64c00',
            transform: 'scale(1.02)',
        },
        '&:active': {
            transform: 'scale(0.98)',
        }
    }
};